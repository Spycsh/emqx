name: Build slim packages

on:
  push:
    tags:
      - v*
      - e*
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        otp:
        - 24.0.5-emqx-1
        os:
        - ubuntu20.04
        - centos7

    container: "ghcr.io/emqx/emqx-builder-helper/5.0:${{ matrix.otp }}-${{ matrix.os }}"

    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: |
        if make emqx-ee --dry-run > /dev/null 2>&1; then
          echo "https://ci%40emqx.io:${{ secrets.CI_GIT_TOKEN }}@github.com" > $HOME/.git-credentials
          git config --global credential.helper store
          echo "${{ secrets.CI_GIT_TOKEN }}" >> ./scripts/git-token
          echo "EMQX_NAME=emqx-ee" >> $GITHUB_ENV
        else
          echo "EMQX_NAME=emqx" >> $GITHUB_ENV
        fi
    - name: build zip packages
      run: make ${EMQX_NAME}-zip
    - name: build deb/rpm packages
      run: make ${EMQX_NAME}-pkg
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: rebar3.crashdump
        path: ./rebar3.crashdump
    - name: packages test
      run: |
        export CODE_PATH=$GITHUB_WORKSPACE
        .ci/build_packages/tests.sh
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}
        path: _packages/**/*.zip

  prepare:
    strategy:
      matrix:
        otp:
          - "23.2.7.2-emqx-2"
          - "24.0.5-emqx-1"

    runs-on: ubuntu-20.04
    container: "ghcr.io/emqx/emqx-builder-helper/5.0:${{ matrix.otp }}-ubuntu20.04"

    outputs:
      profiles: ${{ steps.set_profile.outputs.profiles }}
      old_vsns: ${{ steps.set_profile.outputs.old_vsns }}

    steps:
      - uses: actions/checkout@v2
        with:
          path: source
          fetch-depth: 0
      - name: set profile
        id: set_profile
        shell: bash
        working-directory: source
        run: |
          vsn="$(./pkg-vsn.sh)"
          pre_vsn="$(echo $vsn | grep -oE '^[0-9]+.[0-9]')"
          if make emqx-ee --dry-run > /dev/null 2>&1; then
            old_vsns="$(git tag -l "e$pre_vsn.[0-9]" | xargs echo -n | sed "s/e$vsn//")"
            echo "::set-output name=old_vsns::$old_vsns"
            echo "::set-output name=profiles::[\"emqx-ee\"]"
          else
            old_vsns="$(git tag -l "v$pre_vsn.[0-9]" | xargs echo -n | sed "s/v$vsn//")"
            echo "::set-output name=old_vsns::$old_vsns"
            echo "::set-output name=profiles::[\"emqx\", \"emqx-edge\"]"
          fi
      - name: get otp version
        id: get_otp_version
        run: |
          otp="$(erl -eval '{ok, Version} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), io:fwrite(Version), halt().' -noshell)"
          echo "::set-output name=otp::$otp"
      - name: set get token
        if: endsWith(github.repository, 'enterprise')
        run: |
          echo "https://ci%40emqx.io:${{ secrets.CI_GIT_TOKEN }}@github.com" > $HOME/.git-credentials
          git config --global credential.helper store
      - name: get deps
        working-directory: source
        run: |
          make ensure-rebar3
          ./rebar3 as default get-deps
          rm -rf rebar.lock
      - name: gen zip file
        run: zip -ryq source-${{ steps.get_otp_version.outputs.otp }}.zip source/* source/.[^.]*
      - uses: actions/upload-artifact@v2
        with:
          name: source-${{ steps.get_otp_version.outputs.otp }}
          path: source-${{ steps.get_otp_version.outputs.otp }}.zip

  windows:
    runs-on: windows-2019

    needs: prepare
    if: endsWith(github.repository, 'emqx')

    strategy:
      fail-fast: false
      matrix:
        profile: ${{fromJSON(needs.prepare.outputs.profiles)}}
        exclude:
          - profile: emqx-edge

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: source-23.2.7.2-emqx-2
        path: .
    - name: unzip source code
      run: Expand-Archive -Path source-23.2.7.2-emqx-2.zip -DestinationPath ./
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: gleam-lang/setup-erlang@v1.1.2
      id: install_erlang
      ## gleam-lang/setup-erlang does not yet support the installation of otp24 on windows
      with:
        otp-version: 23.2
    - name: build
      env:
        PYTHON: python
        DIAGNOSTIC: 1
      working-directory: source
      run: |
        $env:PATH = "${{ steps.install_erlang.outputs.erlpath }}\bin;$env:PATH"

        $version = $( "${{ github.ref }}" -replace "^(.*)/(.*)/" )
        if ($version -match "^v[0-9]+\.[0-9]+(\.[0-9]+)?") {
          $regex = "[0-9]+\.[0-9]+(-alpha|-beta|-rc)?\.[0-9]+"
          $pkg_name = "${{ matrix.profile }}-windows-$([regex]::matches($version, $regex).value).zip"
          }
        else {
          $pkg_name = "${{ matrix.profile }}-windows-$($version -replace '/').zip"
          }
        ## We do not build/release bcrypt and quic for windows package
        Remove-Item -Recurse -Force -Path _build/default/lib/bcrypt/
        Remove-Item -Recurse -Force -Path _build/default/lib/quicer/
        if (Test-Path rebar.lock) {
            Remove-Item -Force -Path rebar.lock
        }
        make ensure-rebar3
        copy rebar3 "${{ steps.install_erlang.outputs.erlpath }}\bin"
        ls "${{ steps.install_erlang.outputs.erlpath }}\bin"
        rebar3 --help
        make ${{ matrix.profile }}
        mkdir -p _packages/${{ matrix.profile }}
        Compress-Archive -Path _build/${{ matrix.profile }}/rel/emqx -DestinationPath _build/${{ matrix.profile }}/rel/$pkg_name
        mv _build/${{ matrix.profile }}/rel/$pkg_name _packages/${{ matrix.profile }}
        Get-FileHash -Path "_packages/${{ matrix.profile }}/$pkg_name" | Format-List | grep 'Hash' | awk '{print $3}'  > _packages/${{ matrix.profile }}/$pkg_name.sha256
    - name: run emqx
      timeout-minutes: 1
      working-directory: source
      run: |
        ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx start
        Start-Sleep -s 5
        ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx stop
        ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx install
        ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx uninstall
    - uses: actions/upload-artifact@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: ${{ matrix.profile }}-23.2.7.2-emqx-2
        path: source/_packages/${{ matrix.profile }}/.

  mac:

    strategy:
      fail-fast: false
      matrix:
        macos:
        - macos-11
        - macos-10.15
        otp:
        - 24.0.5-emqx-1

    runs-on: ${{  matrix.macos }}

    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: |
        if make emqx-ee --dry-run > /dev/null 2>&1; then
          echo "https://ci%40emqx.io:${{ secrets.CI_GIT_TOKEN }}@github.com" > $HOME/.git-credentials
          git config --global credential.helper store
          echo "${{ secrets.CI_GIT_TOKEN }}" >> ./scripts/git-token
          echo "EMQX_NAME=emqx-ee" >> $GITHUB_ENV
        else
          echo "EMQX_NAME=emqx" >> $GITHUB_ENV
        fi
    - name: prepare
      run: |
        brew update
        brew install curl zip unzip gnu-sed kerl unixodbc freetds
        echo "/usr/local/bin" >> $GITHUB_PATH
        git config --global credential.helper store
    - uses: actions/cache@v2
      id: cache
      with:
        path: ~/.kerl
        key: otp-${{ matrix.otp }}-${{ matrix.macos }}
    - name: build erlang
      if: steps.cache.outputs.cache-hit != 'true'
      timeout-minutes: 60
      run: |
        kerl build git https://github.com/emqx/otp.git OTP-${{ matrix.otp }} ${{ matrix.otp }}
        kerl install ${{ matrix.otp }} $HOME/.kerl/${{ matrix.otp }}
    - name: build
      run: |
        . $HOME/.kerl/${{ matrix.otp }}/activate
        make ensure-rebar3
        sudo cp rebar3 /usr/local/bin/rebar3
        make ${EMQX_NAME}-zip
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: rebar3.crashdump
        path: ./rebar3.crashdump
    - name: test
      run: |
        unzip -q $(find _packages/${EMQX_NAME} -mindepth 1 -maxdepth 1 -iname \*.zip | head)
        # gsed -i '/emqx_telemetry/d' ./emqx/data/loaded_plugins
        ./emqx/bin/emqx start || cat emqx/log/erlang.log.1
        ready='no'
        for i in {1..10}; do
          if curl -fs 127.0.0.1:18083/api/v5/status > /dev/null; then
            ready='yes'
            break
          fi
          sleep 1
        done
        if [ "$ready" != "yes" ]; then
          echo "Timed out waiting for emqx to be ready"
          cat emqx/log/erlang.log.1
          exit 1
        fi
        ./emqx/bin/emqx_ctl status
        ./emqx/bin/emqx stop
        rm -rf emqx
    - uses: actions/upload-artifact@v2
      with:
        name: macos
        path: _packages/**/*.zip
